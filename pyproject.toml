[tool.poetry]
name = "andrew-assessment"
version = "0.1.0"
description = "A comprehensive data science application"
authors = ["Andrew Leem"]
readme = "README.md"
packages = [{include = "andy", from = "src"}]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.12"
seaborn = "^0.13.2"
xgboost = "^3.0.0"
scikit-survival = "^0.24.1"
optuna = "^4.2.1"
lightgbm = "^4.6.0"
scikit-plot = "^0.3.7"
jupyter = "^1.1.1"
notebook = "^7.3.3"
scikit-learn = "^1.6.1"
numpy = "^2.2.4"
pandas = "^2.2.3"
dill = "^0.3.9"
jarowinkler = "^2.0.1"
datasketch = "^1.6.5"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
black = "^25.1.0"
ruff = "^0.11.2"
mypy = "^1.15.0"
isort = "^6.0.1"
pre-commit = "^4.2.0"
sphinx = "^8.2.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C90", # mccabe complexity
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "RUF", # ruff-specific rules
]
ignore = ["E501", "N806", "N803"]
unfixable = ["B"]

[tool.ruff.isort]
known-first-party = ["andy"]

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=andy --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/andy"]
omit = [
    "tests/*",
    "docs/*",
    "**/__init__.py",
    "**/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "docs/*",
    "**/__init__.py",
    "**/conftest.py",
]
